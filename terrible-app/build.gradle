plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.diffplug.gradle.spotless' version '3.28.1'
    id 'maven-publish'
    id 'java'
}

group = 'io.terrible'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // Spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    runtimeOnly 'org.hsqldb:hsqldb'

    // Jackson addons
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Apache
    implementation 'org.apache.commons:commons-lang3:3.10'

    // Apache
    implementation 'org.apache.commons:commons-lang3:3.10'
    implementation 'commons-io:commons-io:2.6'

    // Google
    implementation 'com.google.guava:guava:29.0-jre'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Terrible
    implementation project(':terrible-library-thumbnails')
    implementation project(':terrible-library-directory-scanner')

    // Development
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    // Tests
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

spotless {
    java {
        licenseHeader '/* Licensed under Apache-2.0 */'
        importOrder 'java', 'javax', 'org', 'com', ''
        removeUnusedImports()
        googleJavaFormat()
    }
}

build.dependsOn spotlessJavaApply
