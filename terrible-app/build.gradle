apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.jib'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // Jackson addons
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Terrible
    implementation project(':terrible-library-search')
}

jib {
    from {
        image = 'peavers/terrible-docker-base:latest'
        auth {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASS")
        }
    }
    to {
        image = 'peavers/terrible-monolith'
        auth {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASS")
        }
        tags = ["latest", "${project.name}-${project.version}".toString()]
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        jvmFlags = ['-Dspring.profiles.active=production', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        labels = [maintainer: 'Chris <peavers@gmail.com>']
        user = "nobody:nogroup"
    }
}
