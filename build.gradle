plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.diffplug.gradle.spotless' version '4.5.1'
    id 'com.google.cloud.tools.jib' version '2.6.0'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // Apache
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-io:commons-io:2.8.0'

    // Google
    implementation 'com.google.guava:guava:30.1-jre'

    // Search
    implementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.10.1'
    implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: '7.10.1'
    implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.10.1'

    // Jackson addons
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-core'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Development
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

jib {
    from {
        image = 'peavers/terrible-docker-base:latest'
    }
    to {
        image = 'peavers/terrible-monolith'
        auth {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASS")
        }
        tags = ["latest", "${project.name}-${project.version}".toString()]
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        jvmFlags = ['-Dspring.profiles.active=production', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
        ports = ['8080']
        labels = [maintainer: 'Chris Turner<peavers@gmail.com>']
    }
}

spotless {
    java {
        licenseHeader '/* Licensed under Apache-2.0 */'
        importOrder 'java', 'javax', 'org', 'com', ''
        removeUnusedImports()
        googleJavaFormat()
    }
}

build.dependsOn spotlessJavaApply

